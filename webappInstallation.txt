#patanzer
#How to install Massmine-for-the-Masses

1. Install an Ubuntu VM - 18.04 tested
2. Install git: sudo apt-get install git
3. Clone the repository: git clone https://github.com/JoshCMoore/Massmine-for-the-Masses.git
	 - This will ask for your github credentials
4. Get into cloned directory: cd Massmine-for-the-Masses
5. Checkout the right branch (for example, I do: git checkout patanzer)
6. Get back out to your home directory: cd  
7. Install pip: sudo apt install python3-pip
8. Install virtualenv: python3 -m pip install virtualenv
9. Make a working directory: mkdir django
10. Go into working directoy: cd django
11. Create virtual enviornment: python3 -m virtualenv environ -p python3
12. Activate environment: source environ/bin/activate
13. Install django: pip install django
14. Install numpy: pip install numpy
15. Install matplotlib: pip install matplotlib

Now for a hacky bit of code...

THIS NEXT STEP WILL BREAK ON ANYTHING BUT PYTHON3.6. IF YOU HAVE A DIFFERENT VERSION, EDIT THE LINE BELOW
16. cd environ/lib/python3.6/site-packages/django/utils
17. (there will eventually be a script for this, but for now do it by hand) Edit the timezone.py file with the following:
	 scroll down to the method get_default_timezone and change the return value from 'return pytz.timezone(settings.TIME_ZONE)' to 'return pytz.timezone(settings.TIME)'

18. Get back out: cd
19. Copy webappproject folder into your virtual environment:
	You want to get the 'webapp' folder from Massmine/src and put it into the django directory you just created.
	Use a file manager, or else do the following command: mv -r Massmine-for-the-Masses/src/* /django/


Installing Massmine: (Note to developers: only needs done the first time, don't have to repeat this step when you overwrite webapp)
For your convenience, Massmine 1.1.0 is included in the webapp folder so you don't have to go download it
20: Move massmine out to your main folder: mv django/webapp/massmine-1.1.0-linux-x86_64.zip django/
21: Unzip the Massmine zip file: unzip django/massmine-1.1.0-linux-x86_64
23: Get into the massmine folder: cd django/massmine-1.1.0-linux-x86_64/massmine
24. Make massmine executable (may ask for your password): sudo ln -s `pwd`/massmine /usr/local/bin
25. Get back out: cd

Installing JSAN: (Again, developers, you only have to do this once)
JSAN 1.4.0 is included in the webapp folder.
26. Move jsan out to your main folder: mv django/webapp/jsan-1.4.0-linux-x86_64.zip django/
27. Unzip the jsan zip file: unzip jsan-1.4.0-linux-x86_64
28. Get into jsan folder: cd django/jsan
29. Make jsan executable: sudo ln -s `pwd`/jsan /usr/local/bin
30. Get back out into the appropriate directory: cd && cd django/webapp

If your database does not exist or needs to be remade, do steps 31 and 32. Otherwise skip to step 33.

31. python manage.py makemigrations
32. python manage.py migrate --run-syncdb


Finally -
33. Run your server!: python manage.py runserver


You're done! If you close this environment, you can get back into it by cd'ing into the django folder and running: source environ/bin/activate
   
