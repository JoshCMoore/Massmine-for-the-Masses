#patanzer
#How to install Massmine-for-the-Masses

1. Install an Ubuntu VM - 18.04 tested
2. Install git: sudo apt-get install git
3. Install pip: sudo apt install python3-pip
4. Install virtualenv: python3 -m pip install virtualenv
5. Make a working directory: mkdir django
6. Go into working directoy: cd django
7. Create virtual enviornment: python3 -m virtualenv environ -p python3
8. Activate environment: source environ/bin/activate
9. Install django: pip install django
10. Install numpy: pip install numpy
11. Install matplotlib: pip install matplotlib
12. Install plotly: pip install plotly
13. Install cufflinks: pip install cufflinks

Now for a hacky bit of code...

THIS NEXT STEP WILL BREAK ON ANYTHING BUT PYTHON3.6. IF YOU HAVE A DIFFERENT VERSION, EDIT THE LINE BELOW
14. cd environ/lib/python3.6/site-packages/django/utils
15. (there will eventually be a script for this, but for now do it by hand) Edit the timezone.py file with the following:
	 scroll down to the method get_default_timezone and change the return value from 'return pytz.timezone(settings.TIME_ZONE)' to 'return pytz.timezone(settings.TIME)'

Continuing with normal installation:
16. Get back out: cd
17. Clone the repository: git clone https://github.com/JoshCMoore/Massmine-for-the-Masses.git
18. Get into cloned directory: cd Massmine-for-the-Masses

Only developers do step 19, everyone else skip to step 20
19. Checkout the right branch (for example, I do: git checkout patanzer)

20. Get back out to your home directory: cd  
21. Copy webappproject folder into your virtual environment:
	You want to get the 'webapp' folder from Massmine/src and put it into the django directory you just created.
	Use a file manager, or else do the following command: cp -a Massmine-for-the-Masses/src/. django/


Installing Massmine: (Note to developers: only needs done the first time, don't have to repeat this step when you overwrite webapp)
For your convenience, Massmine 1.1.0 is included in the webapp folder so you don't have to go download it. The website for it is here: https://www.massmine.org/
22: Unzip the Massmine zip file: unzip django/webapp/massmine-1.1.0-linux-x86_64 -d django/
23. Make massmine executable (may ask for your password): sudo ln -s django/massmine/massmine /usr/local/bin

Installing JSAN: (Again, developers, you only have to do this once)
JSAN 1.4.0 is included in the webapp folder. The github for it is: https://github.com/n3mo/jsan
24. Unzip the jsan zip file: unzip django/webapp/jsan-1.4.0-linux-x86_64 -d django/
25. Make jsan executable: sudo ln -s django/jsan/jsan /usr/local/bin
26. Get into the appropriate directory: cd django/webapp

If your database does not exist or needs to be remade, do steps 27 and 28. Otherwise skip to step 29.

27. python manage.py makemigrations
28. python manage.py migrate --run-syncdb


Finally -
29. Run your server!: python manage.py runserver


You're done! If you close this environment, you can get back into it by cd'ing into the django folder and running: source environ/bin/activate
   
